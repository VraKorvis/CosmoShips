//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity playerLvlEntity { get { return GetGroup(ConfigMatcher.PlayerLvl).GetSingleEntity(); } }
    public PlayerLvlComponent playerLvl { get { return playerLvlEntity.playerLvl; } }
    public bool hasPlayerLvl { get { return playerLvlEntity != null; } }

    public ConfigEntity SetPlayerLvl(int newLvl) {
        if (hasPlayerLvl) {
            throw new Entitas.EntitasException("Could not set PlayerLvl!\n" + this + " already has an entity with PlayerLvlComponent!",
                "You should check if the context already has a playerLvlEntity before setting it or use context.ReplacePlayerLvl().");
        }
        var entity = CreateEntity();
        entity.AddPlayerLvl(newLvl);
        return entity;
    }

    public void ReplacePlayerLvl(int newLvl) {
        var entity = playerLvlEntity;
        if (entity == null) {
            entity = SetPlayerLvl(newLvl);
        } else {
            entity.ReplacePlayerLvl(newLvl);
        }
    }

    public void RemovePlayerLvl() {
        playerLvlEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public PlayerLvlComponent playerLvl { get { return (PlayerLvlComponent)GetComponent(ConfigComponentsLookup.PlayerLvl); } }
    public bool hasPlayerLvl { get { return HasComponent(ConfigComponentsLookup.PlayerLvl); } }

    public void AddPlayerLvl(int newLvl) {
        var index = ConfigComponentsLookup.PlayerLvl;
        var component = CreateComponent<PlayerLvlComponent>(index);
        component.lvl = newLvl;
        AddComponent(index, component);
    }

    public void ReplacePlayerLvl(int newLvl) {
        var index = ConfigComponentsLookup.PlayerLvl;
        var component = CreateComponent<PlayerLvlComponent>(index);
        component.lvl = newLvl;
        ReplaceComponent(index, component);
    }

    public void RemovePlayerLvl() {
        RemoveComponent(ConfigComponentsLookup.PlayerLvl);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherPlayerLvl;

    public static Entitas.IMatcher<ConfigEntity> PlayerLvl {
        get {
            if (_matcherPlayerLvl == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.PlayerLvl);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherPlayerLvl = matcher;
            }

            return _matcherPlayerLvl;
        }
    }
}
