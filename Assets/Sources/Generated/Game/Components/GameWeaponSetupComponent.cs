//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity weaponSetupEntity { get { return GetGroup(GameMatcher.WeaponSetup).GetSingleEntity(); } }
    public WeaponSetupComponent weaponSetup { get { return weaponSetupEntity.weaponSetup; } }
    public bool hasWeaponSetup { get { return weaponSetupEntity != null; } }

    public GameEntity SetWeaponSetup(WeaponSetup newValue) {
        if (hasWeaponSetup) {
            throw new Entitas.EntitasException("Could not set WeaponSetup!\n" + this + " already has an entity with WeaponSetupComponent!",
                "You should check if the context already has a weaponSetupEntity before setting it or use context.ReplaceWeaponSetup().");
        }
        var entity = CreateEntity();
        entity.AddWeaponSetup(newValue);
        return entity;
    }

    public void ReplaceWeaponSetup(WeaponSetup newValue) {
        var entity = weaponSetupEntity;
        if (entity == null) {
            entity = SetWeaponSetup(newValue);
        } else {
            entity.ReplaceWeaponSetup(newValue);
        }
    }

    public void RemoveWeaponSetup() {
        weaponSetupEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public WeaponSetupComponent weaponSetup { get { return (WeaponSetupComponent)GetComponent(GameComponentsLookup.WeaponSetup); } }
    public bool hasWeaponSetup { get { return HasComponent(GameComponentsLookup.WeaponSetup); } }

    public void AddWeaponSetup(WeaponSetup newValue) {
        var index = GameComponentsLookup.WeaponSetup;
        var component = CreateComponent<WeaponSetupComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceWeaponSetup(WeaponSetup newValue) {
        var index = GameComponentsLookup.WeaponSetup;
        var component = CreateComponent<WeaponSetupComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveWeaponSetup() {
        RemoveComponent(GameComponentsLookup.WeaponSetup);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherWeaponSetup;

    public static Entitas.IMatcher<GameEntity> WeaponSetup {
        get {
            if (_matcherWeaponSetup == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.WeaponSetup);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherWeaponSetup = matcher;
            }

            return _matcherWeaponSetup;
        }
    }
}
