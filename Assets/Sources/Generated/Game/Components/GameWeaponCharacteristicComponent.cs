//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity weaponCharacteristicEntity { get { return GetGroup(GameMatcher.WeaponCharacteristic).GetSingleEntity(); } }
    public WeaponCharacteristicComponent weaponCharacteristic { get { return weaponCharacteristicEntity.weaponCharacteristic; } }
    public bool hasWeaponCharacteristic { get { return weaponCharacteristicEntity != null; } }

    public GameEntity SetWeaponCharacteristic(WeaponCharacteristic newValue) {
        if (hasWeaponCharacteristic) {
            throw new Entitas.EntitasException("Could not set WeaponCharacteristic!\n" + this + " already has an entity with WeaponCharacteristicComponent!",
                "You should check if the context already has a weaponCharacteristicEntity before setting it or use context.ReplaceWeaponCharacteristic().");
        }
        var entity = CreateEntity();
        entity.AddWeaponCharacteristic(newValue);
        return entity;
    }

    public void ReplaceWeaponCharacteristic(WeaponCharacteristic newValue) {
        var entity = weaponCharacteristicEntity;
        if (entity == null) {
            entity = SetWeaponCharacteristic(newValue);
        } else {
            entity.ReplaceWeaponCharacteristic(newValue);
        }
    }

    public void RemoveWeaponCharacteristic() {
        weaponCharacteristicEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public WeaponCharacteristicComponent weaponCharacteristic { get { return (WeaponCharacteristicComponent)GetComponent(GameComponentsLookup.WeaponCharacteristic); } }
    public bool hasWeaponCharacteristic { get { return HasComponent(GameComponentsLookup.WeaponCharacteristic); } }

    public void AddWeaponCharacteristic(WeaponCharacteristic newValue) {
        var index = GameComponentsLookup.WeaponCharacteristic;
        var component = CreateComponent<WeaponCharacteristicComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceWeaponCharacteristic(WeaponCharacteristic newValue) {
        var index = GameComponentsLookup.WeaponCharacteristic;
        var component = CreateComponent<WeaponCharacteristicComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveWeaponCharacteristic() {
        RemoveComponent(GameComponentsLookup.WeaponCharacteristic);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherWeaponCharacteristic;

    public static Entitas.IMatcher<GameEntity> WeaponCharacteristic {
        get {
            if (_matcherWeaponCharacteristic == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.WeaponCharacteristic);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherWeaponCharacteristic = matcher;
            }

            return _matcherWeaponCharacteristic;
        }
    }
}
